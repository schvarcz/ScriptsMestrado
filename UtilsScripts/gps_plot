#!/usr/bin/python
# -*- coding: utf8 -*-
import matplotlib.pyplot as plt
from matplotlib.pyplot import subplots,cm
from matplotlib.gridspec import GridSpec
import numpy as np, os, sys, csv, utm

def showHelp():
    print """
Plot GPS information from IMU 'Project'

    $ gps_plot gpsFile

          """
    sys.exit()


if len(sys.argv) < 2:
    showHelp()

gpsFile = os.path.expanduser(sys.argv[1])

#print "GPS file: ", gpsFile

rows = []

for line in csv.reader(open(gpsFile,"r"),delimiter=";"):
    rows.append([float(col) for col in line])
    rows[-1] += utm.from_latlon(rows[-1][2], rows[-1][3])

systemNanoTime, utcMilliTime, latitude, longitude, altitude, speed, bearing, utmx, utmy, zoneNro, zoneChar = zip(*rows)


plt.plot(utmx, utmy,"g-")
plt.show()

print """
<!DOCTYPE html>
<html>
  <head>
    <style type="text/css">
      html, body, #map-canvas { height: 100%; margin: 0; padding: 0;}
    </style>
    <script type="text/javascript"
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBT7sKs6NJs4a9hwkp1WKP29Mpww0axNKI">
    </script>
    <script type="text/javascript">
      function initialize() {
        var mapOptions = {
          center: { lat: -30.046626, lng: -51.178489},
          zoom: 13
        };
        var map = new google.maps.Map(document.getElementById('map-canvas'),
            mapOptions);
            
          var flightPlanCoordinates = [
"""
print "             ",
print "\n              ".join(["new google.maps.LatLng(" + str(latitude[i])+", "+str(longitude[i]) + ")," for i in range(len(latitude))])

print """
          ];
          var flightPath = new google.maps.Polyline({
            path: flightPlanCoordinates,
            geodesic: true,
            strokeColor: '#FF0000',
            strokeOpacity: 1.0,
            strokeWeight: 2
          });

          flightPath.setMap(map);

      }
      
      google.maps.event.addDomListener(window, 'load', initialize);
    </script>
  </head>
  <body>
<div id="map-canvas"></div>
  </body>
</html>
"""
